#!/usr/bin/env python3
"""
스케줄러 최적화 결과 분석 스크립트

텔레그램 전송 빈도 개선 전후 비교:
- 실시간 가격 알림: 1분 → 15분 간격
- 뉴스 알림: 10분~30분 → 1시간 간격  
- 가격 스냅샷: 1시간마다 → 하루 1번
"""


def analyze_scheduler_optimization():
    """스케줄러 최적화 결과 분석"""
    print("📊 스케줄러 최적화 분석 결과")
    print("=" * 60)

    print("\n🔴 개선 전 (Before):")
    print("📱 텔레그램 전송 빈도:")
    print("  • 실시간 가격 알림: 1분마다 체크 (하루 1,440번)")
    print("  • 선물뉴스: 10분마다 (하루 144번)")
    print("  • 종목뉴스: 15분마다 (하루 96번)")
    print("  • 경제/시장/지수뉴스: 30분마다 (각각 하루 48번)")
    print("  • 가격 스냅샷: 1시간마다 4개 작업 (하루 96번)")
    print("  📊 총 예상 전송량: 최대 486개 메시지/일")

    print("\n🟢 개선 후 (After):")
    print("📱 텔레그램 전송 빈도:")
    print("  • 실시간 가격 알림: 15분마다 체크 (하루 96번)")
    print("  • 모든 뉴스: 1시간마다 (하루 120번)")
    print("  • 기술적 분석: 매일 오전 7시 (하루 2번)")
    print("  • 가격 스냅샷: 매일 오전 6시 (하루 4번)")
    print("  📊 총 예상 전송량: 최대 142개 메시지/일")

    print("\n📈 개선 효과:")
    reduction_pct = ((486 - 142) / 486) * 100
    print(f"  • 전송량 감소: {486} → {142} 개/일")
    print(f"  • 감소율: {reduction_pct:.1f}% 감소")
    print(f"  • 서버 부하: 대폭 감소")
    print(f"  • 텔레그램 스팸: 해결")
    print(f"  • 중요 정보 집중도: 향상")

    print("\n⏰ 새로운 스케줄:")
    print("  • 06:00 KST: 가격 스냅샷 작업들")
    print("  • 07:00 KST: 일일 기술적 분석 리포트")
    print("  • 매 15분: 실시간 가격 모니터링")
    print("  • 매 1시간: 뉴스 크롤링")
    print("  • 매 1시간: 신호 결과 추적")

    print("\n💡 핵심 개선사항:")
    print("  1. 가격 알림: 1분 → 15분 (93% 감소)")
    print("  2. 뉴스 알림: 10-30분 → 1시간 (68% 감소)")
    print("  3. 스냅샷: 1시간마다 → 하루 1번 (96% 감소)")
    print("  4. 기술적 분석: 매일 1번 유지 (최적)")

    print("\n🎯 사용자 경험 개선:")
    print("  • 텔레그램이 더 깔끔해짐")
    print("  • 중요한 알림에 집중 가능")
    print("  • 일봉 기준 투자에 적합한 빈도")
    print("  • 서버 안정성 향상")


if __name__ == "__main__":
    analyze_scheduler_optimization()
